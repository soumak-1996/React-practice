
EPISODE 2 Notes:-

package.json is a configuration file for npm
npm does not stand for node package manager
npm is used to manage packages but it does not stand for node package manager
npm init is used to add npm to application. and npm init will create the package.json file.

A bundler helps to clean and minify the code to make it ready for production deployment. 
npm create react uses webpack as a bundler by default

There are two types of dependencies :
1. Dev dependency. -- Only used in development environments. -D tells the npm that its a dev dependency
2. Normal dependency -- Used in all environments including production.

If there is a minor upgrade in any dependency and we use "^" the dependency will automatically be upgraded.
whereas if we use "~" it will upgrade with every major upgrade. Hence it is safer to use caret coz in case 
of major upgrade a lot of things can break in the application.

package.json keeps the approx version of every dependency and package-lock.json keeps the track of the exact
version of every dependency in the application.

Node_modules contains data and source of all dependencies in the application. package.json is the configuration
file while Node_modules is the database.

Transitive dependency :- When one dependency has dependency on other packages.

If we put package.json and package-lock.json we can create all of the node_modules so we don't need to put node_modules in github.

npx is used to execute a package and npm is used to manage packages/dependencies.

using react with cdn links needs a crossorigin import which is a costly and time consuming operation. so using react with npm is better
coz we can use it from node_modules.

import react from "react --- this react refers the react in node_modules".

Functions of parcel :-
1. Dev build.
2. Creating a local server to host app.
3. Perform HMR -- Hot Module replacement.
4. Gives faster development experience using caching.
5. Image Optimization.
6. Minification and Bundling and Compress the files for production deployment.
7. Content Hashing.
8. Code splitting.
9. Differential Bundling -- support older browsers.
10. Diagnostic and gives better error suggestions.
11. Way to host on https.
12. Tree shaking -- remove unused code.
13. Creates a different build for Dev and Production.

Parcel uses a file changing algorithm built using c++

EPISODE 3 

React.createElement returns a object and when the object is rendered it turns into an html element.

JSX is not a part of react. You can create the whole react application without jsx.
JSX is NOT html inside javascript. It is an html like syntax.

JSX is not proper javascript. JS Engine only understands ECMAScript.

JSX Code is transpiled before its rendered in browser using BABEL.
BABEL is responsible for converting JSX to ECMAScript to make the browser/JS Engine understand JSX Code.
JSX => React.createElement (Babel is used to do this) => React element object => render(element) to render it as html
If we need to give attributes to JSX we need to use camelCase.
JSX we need to wrap it in () if we use multiple lines.
JSX takes care of cross-side scripting attacks.

Everything in React is a component.
Functional component is a function that returns a JSX Code or a react element.
To create a component you have to Start it with caps to make babel understand that its a component.

Component composition is just putting a component into another component.

Different ways to call a component inside another component :-
1. <Title/>
2. <Title> </Title>
3. {Title()} --- functional components are nothing but normal javascript functions

JSX element must have only 1 parent. --- React.Fragment is used to put multiple div to get over this error.
React.Fragement behaves like an empty tag.
Use empty tags to use react Fragement

React is designed to manage the rendering of the entire component tree from a single entry point. 
If you need to render multiple components, you can do so within the component hierarchy of the root component, 
rather than having multiple top-level ReactDOM.render() statements.

Functional components are written using const because they represent an immutable object.


Config-driven UI :-
Website being driven by data.

Putting key in map is important to make sure react only renders the item that is changed.
Never use index as keys.

EPISODE 5:

React Best practices :-
1. Create folders for components,services,interfaces and keep react default code in src.
2. Components name it with Caps;

2 types of export and import :-

1. Default export/import :- Can only be used once in a file. No need to use { } in import;
2. Named export/import :- Used when we need to export multiple values from one file. 
                        { } is used to destructure the name so react understands which value we want to import.


React hooks are nothing but normal js functions. Its inbuilt with different utilities.
- useState() -- used to create state variables. its called state coz it maintains the state of
the component. useState returns an array. [a,setA] is array destructuring after usestate.

whenever a state variable changes react will re-render the component. 
Thats how state variable maintains the state of the component. 


React uses reconciliation algorithm also known as react fiber.
Virtual DOM is a representation of an actual DOM. Its a normal JS object which keeps track 
of the actual DOM.
Diff algorithm is used to find out the difference between 2 virtual DOMs old and new.
Then the differences are rendered onto the actual DOM. 

From react 16, finding out the 2 difference between 2 virtual dom objects is done using react fiber.
instead of comparing 2 html we compare 2 js objects which makes react faster coz its easier to compare js objects than html.

As soon as setList() is called, react will start reconciliation and update the actual dom.
the set works as a trigger to start the diff algorithm.

EPISODE 6 :-

Monolith architecture :- All services are in the same application. API, UI and every service is in the same project.
This leads to tight coupling and one minor change in one service requires build and deployment of all the services.

Microservice architecture :- This follows seperation of concern and single responsibility principle.
The different services interact with each other dependent on the use case.

The reason react is popular is because of the re-render cycle efficiency.

useEffect is called after the component is rendered not before the render cycle of the component.

React re-renders the whole component and not just the individual element. rendering a component is nothing but calling the function again.

when you re-render a component a new state variable is created and that is how we can update values of const variables. Its not the same
variable that gets updated, but react creates a new variable with the same name and updated value.

In the actual DOM only the elements that are changed are updated. but the whole component is re-rendered from react side.

If we bind a state variable to input box unless we change the value of the input box it will not reflect in the input box.


EPISODE 7 :

if no dependency array is provided to useEffect => useEffect called on every render.
if there is an empty dependency array [] => useEffect is only called on the initial render.
if we provide something in dependency array => useEffect is only called when the dependency changes.

Best practices regarding useState :- 
1. Never create state variables outside the component and always create the state variables at the top of the component.
2. Dont create state variables in any other scope other than component level i.e inside if else,for loop,functions.

React-router-dom creates a default error page for invalid routes.

Never use <a> tag to re-route to components because it refreshes the whole page. use link instead.

# 2 types of routing in web apps :
    - Server side routing :- using <a> or traditional tags to navigate where there is a network call
    to fetch and the whole page is refreshed to render the new html.
    - Client side routing :- there is no network call and the pages are not refreshed only the components
    are interchanged. hence react creates single page application.

Link tag is a wrapper over <a> tag.

EPISODE 8:

Constructor -> Render -> ComponentDidMount -> setState -> componentDidUpdate -> ComponentWillUnmount

EPISODE 9 :

single responsibility principle : Make your component as light as possible so that code is more 
maintainable, portable and testable.

Lazy loading is used to divide the app into smaller bundles which optimizes the app.